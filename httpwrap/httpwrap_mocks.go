// Code generated by MockGen. DO NOT EDIT.
// Source: httpwrap.go

// Package httpwrap is a generated GoMock package.
package httpwrap

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// Mockdoer is a mock of doer interface
type Mockdoer struct {
	ctrl     *gomock.Controller
	recorder *MockdoerMockRecorder
}

// MockdoerMockRecorder is the mock recorder for Mockdoer
type MockdoerMockRecorder struct {
	mock *Mockdoer
}

// NewMockdoer creates a new mock instance
func NewMockdoer(ctrl *gomock.Controller) *Mockdoer {
	mock := &Mockdoer{ctrl: ctrl}
	mock.recorder = &MockdoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockdoer) EXPECT() *MockdoerMockRecorder {
	return m.recorder
}

// Do mocks base method
func (m *Mockdoer) Do(req *http.Request) (*http.Response, error) {
	ret := m.ctrl.Call(m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do
func (mr *MockdoerMockRecorder) Do(req interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*Mockdoer)(nil).Do), req)
}
